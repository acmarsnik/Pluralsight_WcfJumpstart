Summary

So in this module you got a good, quick introduction to the security aspects of WCF. You learned the fundamental principal is that you should be using security on just about any WCF service out there, especially if there's any kind of path to the open internet. You saw that if you're willing to Windows authentication you don't have to do much work because the WCF bindings are secure by default with the exception of the BasicHttpBinding and another one called a WebHttpBinding, that's a non-SOAP-based binding, and the kind of security those bindings are going to use is Windows authentication and authorization. You can certainly configure yourself to use those other kinds of credentials and other sources for authorization, but that goes well beyond the scope of this course. When using Windows authentication, it happens automatically through Windows network protocols. So it flows kind of at a network level through NTLM or Kerberos, and WCF doesn't have to put any kind of credential information directly into the message. Basically what it's doing in that process, again, is to validate the client identity at the service because the service may be on a machine that's connected to a domain, and the client machine may or may not be. I should mention that if you are trying to distribute your service with NTLM you'll have to duplicate the username and password that's configured on the client machine, on the server machine as well. So you have to duplicate your accounts across all the machines when you're in a workgroup configuration. In a domain configuration, all that's handled by Active Directory for you. Finally, once you've got an authenticated identity, and you know who the caller is, then you can go ahead and start making authorization decisions, and you can do that based on the Thread. CurrentPrincipal, using either the IsInRole method on the principal or the PrincipalPermission attribute on the service method. 