Demo: Hosting in WCF Service Library

With all that service, behavior, and binding configuration out of the way, we just need one more bit of config so that we can run, and that's a connectionString, because we're doing data access. So I'm going to pop a connectionString in here for my ZzaDbContext, to my local default SQL instance, and to the Zza database. That Zza database is created by a script that's included with the source code. With that in place we could go over to the Properties for our WCF Service Library, and make sure that this Start WCF Service Host option is checked. In the Debug section we can uncomment the client startup to startup our TestClient. With that we could try to go ahead and run and click the Start button here. We can see the WCF Service Host popping up, but with an error. And it says, could not register this URL, your process does not have access rights to this namespace. Now what it's really complaining about there is the fact that we're running Visual Studio as not an administrator. I'm on Windows 8 here, if you're on Windows 7 this shouldn't be a problem, but Windows 8 tightened down the security model, and in order to do certain privileged things such as host services and open sockets and things like that, you have to be running as administrator. So I'm going to close Visual Studio and reopen it as administrator. Now at the top we can see I'm running as admin, and now I can try to start again. This time we see a different experience; Service Host started up and just went to the system tray because it's in a started happy state. The WcfTestClient started up and was able to read down the metadata. You can see two different endpoints being reflected there for our basic HTTP service and our NETTCP service, and it's got the different operations exposed on our service contracts. Ignore the async methods; we'll talk more about those later. So we can double-click on GetProducts here, click the Invoke button, and lo and behold our products come in down below, and we can inspect them. So we're able to basically smoke test, do a quick test that we can call our service in this host. So most of what we talked about so far was configuration that's going to be common with other kinds of Service Hosts. Using the WCF Service Library hosting is fine for a quick smoke test, but if you start having complicated errors it's very hard to diagnose because you don't have access to the true hosting environment source code. So next up we're going to look at self-hosting our service. 