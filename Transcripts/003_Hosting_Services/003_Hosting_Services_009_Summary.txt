Summary

In this module you saw how to host services in several different ways. First off you saw the configuration is a real focal point in setting up your host environment. It can get fairly complicated, but it gives you very fine-grained control of exactly how your services are exposed for clients to call them. You saw that a WCF Service Library provides you a very quick way to get your service up and running so that you can kind of poke at it and make sure it works, but you'll find that you'll want to quickly evolve beyond this because when things start going wrong in your hosting environment it's a little too opaque being an externally produced executable that you don't have access to. So then you'll probably want to move on to self-hosting through a Console App for debugging, and then deploying that via a Windows service. When you self-host you use the ServiceHost class, you construct that ServiceHost class wrapping a given service type, you open that ServiceHost to start listening, and you close it to stop listening. You saw that you can also use IIS hosting, really a web application project, from a code perspective that can be deployed to IIS as a way of exposing HTTP services, and possibly other protocols using the Windows Process Activation Service, as WAS for short. So now we've got some services that are hosted, and we saw in a minimal fashion that they're callable. In the next module we'll write some client code to start calling these services for real. 