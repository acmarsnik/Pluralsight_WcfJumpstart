Demo: Hosting in IIS

Final option I want to show here for hosting your services is to host them in IIS. So I can go and Add, a New Project. We'll pick a Web project, and call it Zza. IISHost, and click OK. I'm just going to use an empty project template here, and like with the SelfHost, the first thing we need to do is reference the service library that we're trying to host. Next we need configuration, and most of the configuration in an IIS Host is exactly the same. So again, I'll grab my connectionStrings and serviceModel from my SelfHost, and paste those into my Web. config. Now the one thing that's going to be different when you're in an IIS-hosted environment is that IIS is going to determine the addressing scheme, not your configuration. So I can remove the baseAddresses here, and I can remove the address property on the endpoint elements because the address is going to be determined by where the IIS site is that you eventually deploy this to. Now I'm going to be running this under IIS Express here in a debug environment, and it's going to do something similar where it generates a dynamic port on localhost. But for deployment purposes you'd end up pushing this out to an IIS server that has its own base addressing scheme, and can only answer HTTP requests by default. So now to get our service hosted though, there has to be a place within this IIS site that the request goes into. And by default, what you can use here is SVC files. So I'm going to go Add, a New Item, just go to the General category and pick a Text File, and I'm going to call this ZzaService. svc. Click Add, and what I need in here is a directive. If I do open angle bracket we get IntelliSense and we can see one option is a ServiceHost, which is exactly what we're trying to define. There's a number of properties here, but the one that's most important is the service, and what you're going to put here, unfortunately you don't get IntelliSense, is the same thing you used for the name of a service in config, it's the Service implementation class. So for us that's going to be Zza. Services. ZzaService. With that, we're almost ready to go. Because I'm not doing the WAS hosting I do need to go to my config and get rid of my TCP endpoint, and I should get rid of the TcpBinding modification as well. So we now just have our one endpoint that's HTTP, we've got it hosted through this SVC file. With that we can save our changes, go over here, right-click, and View in Browser. And we can see we get our happy page just like we did with the self hosting. And we can click through to see the WSDL. So our service is now up and hosted under this addressing scheme that's determined by the web hosting where that SVC file represents the endpoint address. 